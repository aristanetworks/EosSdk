# hunk 1: multi-inheritance is broken https://sourceforge.net/p/swig/bugs/1379/
# hunk 2: compilation issue on GCC 4.6 http://sourceforge.net/p/swig/patches/296/
# hunk 3: thread bug on iterators https://sourceforge.net/p/swig/bugs/1370/
# hunk 4: gcc8: clearing an object of non-trivial type [-Werror=class-memaccess]
# hunk 5: thread bug on virtual methods https://github.com/swig/swig/issues/306
# hunk 6: gcc8: specified bound depends on the length of the source argument [-Werror=stringop-overflow=]
--- eossdk_wrap.cpp-t
+++ eossdk_wrap.cpp-t
@@ -1756,6 +1756,10 @@
     PyErr_SetString(PyExc_TypeError, "Attempt to append a non SwigPyObject");
     return NULL;
   }
+  while (sobj->next && SwigPyObject_Check(sobj->next)) {
+     sobj = (SwigPyObject *)sobj->next;
+  }
+  ((SwigPyObject *)next)->next = sobj->next;
   sobj->next = next;
   Py_INCREF(next);
   return SWIG_Py_Void();
@@ -3749,6 +3753,7 @@

 
 #include <stdexcept>
+#include <cstddef>
 

 namespace swig {
@@ -3863,7 +3868,11 @@
     }
       
   public:
-    virtual ~SwigPyIterator() {}
+    virtual ~SwigPyIterator() {
+       SWIG_PYTHON_THREAD_BEGIN_BLOCK;
+       _seq = 0;
+       SWIG_PYTHON_THREAD_END_BLOCK;
+    }
 
     // Access iterator method, required by Python
     virtual PyObject *value() const = 0;
@@ -4644,7 +4653,7 @@
	  SWIG_Error(SWIG_TypeError,  swig::type_name<Type>());
	}
	if (throw_error) throw std::invalid_argument("bad type");
-	memset(v_def,0,sizeof(Type));
+	memset(reinterpret_cast<void*>(v_def),0,sizeof(Type));
	return *v_def;
       }
     }
@@ -116430,7 +116441,7 @@
       size_t size = strlen(name)+1;
       gv->name = (char *)malloc(size);
       if (gv->name) {
-        strncpy(gv->name,name,size);
+        strcpy(gv->name,name);
         gv->get_attr = get_attr;
         gv->set_attr = set_attr;
         gv->next = v->vars;
