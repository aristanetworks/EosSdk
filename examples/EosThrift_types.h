/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef EosThrift_TYPES_H
#define EosThrift_TYPES_H

#include <iosfwd>

#include <thrift/Thrift.h>
#include <thrift/TApplicationException.h>
#include <thrift/TBase.h>
#include <thrift/protocol/TProtocol.h>
#include <thrift/transport/TTransport.h>

#include <thrift/cxxfunctional.h>


namespace eos {

struct OperStatus {
  enum type {
    UNKNOWN = 0,
    UP = 1,
    DOWN = 2
  };
};

extern const std::map<int, const char*> _OperStatus_VALUES_TO_NAMES;

struct InterfaceType {
  enum type {
    UNKNOWN = 0,
    OTHER = 1,
    ETH = 2,
    VLAN = 3,
    MANAGEMENT = 4,
    LOOPBACK = 5,
    LAG = 6,
    NULL0 = 7
  };
};

extern const std::map<int, const char*> _InterfaceType_VALUES_TO_NAMES;

} // namespace

#endif
